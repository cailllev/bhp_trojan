environ({'ALLUSERSPROFILE': 'C:\\ProgramData', 'APPDATA': 'C:\\Users\\Levi\\AppData\\Roaming', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'COMPUTERNAME': 'LEVIS-MACHINE', 'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe', 'DASHLANE_DLL_DIR': 'C:\\Users\\Levi\\AppData\\Roaming\\Dashlane\\6.4.0.12512\\bin\\Firefox_Extension\\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\\components;C:\\Users\\Levi\\AppData\\Roaming\\Dashlane\\6.4.0.12512\\ucrt;C:\\Users\\Levi\\AppData\\Roaming\\Dashlane\\6.4.0.12512\\bin\\Qt;C:\\Users\\Levi\\AppData\\Roaming\\Dashlane\\6.4.0.12512\\ucrt;C:\\Users\\Levi\\AppData\\Roaming\\Dashlane\\6.4.0.12512\\bin\\Ssl', 'DRIVERDATA': 'C:\\Windows\\System32\\Drivers\\DriverData', 'FPS_BROWSER_APP_PROFILE_STRING': 'Internet Explorer', 'FPS_BROWSER_USER_PROFILE_STRING': 'Default', 'HOMEDRIVE': 'C:', 'HOMEPATH': '\\Users\\Levi', 'IDEA_INITIAL_DIRECTORY': 'C:\\WINDOWS\\system32', 'IPYTHONENABLE': 'True', 'LOCALAPPDATA': 'C:\\Users\\Levi\\AppData\\Local', 'LOGONSERVER': '\\\\LEVIS-MACHINE', 'NUMBER_OF_PROCESSORS': '4', 'ONEDRIVE': 'C:\\Users\\Levi\\OneDrive - ZHAW', 'ONEDRIVECOMMERCIAL': 'C:\\Users\\Levi\\OneDrive - ZHAW', 'ONEDRIVECONSUMER': 'C:\\Users\\Levi\\OneDrive', 'OS': 'Windows_NT', 'PATH': 'C:\\Users\\Levi\\PycharmProjects\\BlackHatPython\\venv\\lib\\site-packages\\pywin32_system32;C:\\Users\\Levi\\PycharmProjects\\BlackHatPython\\venv\\Scripts;C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\Program Files\\Git\\cmd;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\Java\\jdk-11\\bin;C:\\Program Files\\nodejs\\;C:\\Program Files\\MATLAB\\R2020a\\bin;C:\\Users\\Levi\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Levi\\AppData\\Roaming\\Dashlane\\6.4;C:\\Users\\Levi\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Levi\\AppData\\Roaming\\Dashlane\\6.4.0.12512\\bin\\Firefox_Extension\\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\\components;C:\\Users\\Levi\\AppData\\Roaming\\Dashlane\\6.4.0.12512\\ucrt;C:\\Users\\Levi\\AppData\\Roaming\\Dashlane\\6.4.0.12512\\bin\\Qt;C:\\Users\\Levi\\AppData\\Roaming\\Dashlane\\6.4.0.12512\\bin\\Ssl;C:\\Users\\Levi\\AppData\\Local\\atom\\bin;C:\\Users\\Levi\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Levi\\AppData\\Roaming\\npm', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'PROCESSOR_ARCHITECTURE': 'AMD64', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 94 Stepping 3, GenuineIntel', 'PROCESSOR_LEVEL': '6', 'PROCESSOR_REVISION': '5e03', 'PROGRAMDATA': 'C:\\ProgramData', 'PROGRAMFILES': 'C:\\Program Files', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'PROGRAMW6432': 'C:\\Program Files', 'PROMPT': '(venv) $P$G', 'PSMODULEPATH': 'C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules;C:\\Program Files\\Intel\\', 'PUBLIC': 'C:\\Users\\Public', 'PYCHARM_HOSTED': '1', 'PYDEVD_LOAD_VALUES_ASYNC': 'True', 'PYTHONIOENCODING': 'UTF-8', 'PYTHONPATH': 'C:\\Users\\Levi\\AppData\\Local\\JetBrains\\Toolbox\\apps\\PyCharm-C\\ch-0\\201.6668.115\\plugins\\python-ce\\helpers\\third_party\\thriftpy;C:\\Users\\Levi\\AppData\\Local\\JetBrains\\Toolbox\\apps\\PyCharm-C\\ch-0\\201.6668.115\\plugins\\python-ce\\helpers\\pydev', 'PYTHONUNBUFFERED': '1', 'SESSIONNAME': 'Console', 'SYSTEMDRIVE': 'C:', 'SYSTEMROOT': 'C:\\WINDOWS', 'TEMP': 'C:\\Users\\Levi\\AppData\\Local\\Temp', 'TMP': 'C:\\Users\\Levi\\AppData\\Local\\Temp', 'USERDOMAIN': 'LEVIS-MACHINE', 'USERDOMAIN_ROAMINGPROFILE': 'LEVIS-MACHINE', 'USERNAME': 'Levi', 'USERPROFILE': 'C:\\Users\\Levi', 'VBOX_MSI_INSTALL_PATH': 'C:\\Program Files\\Oracle\\VirtualBox\\', 'VIRTUAL_ENV': 'C:\\Users\\Levi\\PycharmProjects\\BlackHatPython\\venv', 'WINDIR': 'C:\\WINDOWS', '_OLD_VIRTUAL_PATH': 'C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\Program Files\\Git\\cmd;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\Java\\jdk-11\\bin;C:\\Program Files\\nodejs\\;C:\\Program Files\\MATLAB\\R2020a\\bin;C:\\Users\\Levi\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Levi\\AppData\\Roaming\\Dashlane\\6.4;C:\\Users\\Levi\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Levi\\AppData\\Roaming\\Dashlane\\6.4.0.12512\\bin\\Firefox_Extension\\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\\components;C:\\Users\\Levi\\AppData\\Roaming\\Dashlane\\6.4.0.12512\\ucrt;C:\\Users\\Levi\\AppData\\Roaming\\Dashlane\\6.4.0.12512\\bin\\Qt;C:\\Users\\Levi\\AppData\\Roaming\\Dashlane\\6.4.0.12512\\bin\\Ssl;C:\\Users\\Levi\\AppData\\Local\\atom\\bin;C:\\Users\\Levi\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Levi\\AppData\\Roaming\\npm', '_OLD_VIRTUAL_PROMPT': '$P$G', 'PYTHONUSERBASE': 'C:\\Users\\Levi\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.7_qbz5n2kfra8p0\\LocalCache\\local-packages'})